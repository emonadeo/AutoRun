plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "2.+"
	id "com.diffplug.spotless" version "6.25.0"
}

version = "${project.supported_versions}-${project.mod_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/" }
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"autorun" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"
}

processResources {
	inputs.property "mod_version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "mod_version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

curseforge {
	if (project.hasProperty("curseForgeApiKey") || System.getenv("curseForgeApiKey") != null) {
		apiKey = project.hasProperty("curseForgeApiKey") ? project.property("curseForgeApiKey") : System.getenv("curseForgeApiKey")
		project {
			id = project.project_id
			releaseType = project.release_type
			changelogType = "text"
			changelog = file("changelog.txt")

			addGameVersion "1.20"
			addGameVersion "1.20.1"
			addGameVersion "Java 17"
			addGameVersion "Fabric"

			relations {
				requiredLibrary "fabric-api"
			}

			mainArtifact(remapJar)
			afterEvaluate {
				uploadTask.dependsOn(remapJar)
			}
		}
		options {
			forgeGradleIntegration = false
		}
	}
}

import com.modrinth.minotaur.dependencies.ModDependency

modrinth {
	token = project.hasProperty("modrinthApiKey") ? project.property("modrinthApiKey") : System.getenv("modrinthApiKey")
	projectId = "2i7tg1Wv"
	versionName = "v${project.mod_version} (Minecraft 1.20)"
	versionNumber = version
	uploadFile = remapJar
	gameVersions = ["1.20", "1.20.1"]
	loaders = ["fabric"]
}

spotless {
format 'misc', {
	target '*.gradle', '.gitattributes', '.gitignore'

	trimTrailingWhitespace()
	indentWithTabs()
	endWithNewline()
}
java {
eclipse()
}
}
