plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "maven-publish"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "1.2.1"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.supported_versions}-${project.mod_version}"
group = project.maven_group

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}"
}

processResources {
    inputs.property "mod_version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "mod_version": project.mod_version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this task, sources will not be generated.
    withSourcesJar()
}


jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

curseforge {
    if (project.hasProperty("curseForgeApiKey") || System.getenv("curseForgeApiKey") != null) {
        apiKey = project.hasProperty("curseForgeApiKey") ? project.property("curseForgeApiKey") : System.getenv("curseForgeApiKey")
        project {
            id = project.project_id
            releaseType = project.release_type
            changelogType = "text"
            changelog = file("changelog.txt")

            addGameVersion "1.19"
            addGameVersion "Java 17"
            addGameVersion "Fabric"

            relations {
                requiredLibrary "fabric-api"
            }

            mainArtifact(remapJar)
            afterEvaluate {
                uploadTask.dependsOn(remapJar)
            }
        }
        options {
            forgeGradleIntegration = false
        }
    }
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {
    token = project.hasProperty("modrinthApiKey") ? project.property("modrinthApiKey") : System.getenv("modrinthApiKey")
    projectId = "2i7tg1Wv"
    versionName = "v${project.mod_version} (Minecraft 1.19)"
    versionNumber = version
    uploadFile = remapJar
    addGameVersion "1.19"
    addLoader "fabric"
}
